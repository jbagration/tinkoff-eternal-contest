'''
Миша сидел в переговорке и решил нарисовать ее план на листке бумаги. Когда он закончил рисовать план переговорки, он положил лист с планом на пол переговорки. Теперь ему стало интересно: а есть ли на плане точка, которая лежит ровно на том месте пола, за которое она отвечает?
Помогите ему найти эту точку.


Формат входных данных
Переговорка и ее план имеют форму прямоугольника. Первая строка входного файла содержит два вещественных числа: координаты ﻿XX﻿ и ﻿YY﻿ переговорки ﻿(1 \leq X \leq 1000 , 1\leq Y \leq 1000)(1≤X≤1000,1≤Y≤1000)﻿. Координаты углов переговорки равны ﻿(0,0), (X,0), (X,Y), (0,Y)(0,0),(X,0),(X,Y),(0,Y)﻿.
Во второй строке файла даются восемь вещественных чисел, описывающих положение углов плана переговорки. Сначала вводятся координаты того угла плана, который соответствует углу переговорки с координатами ﻿(0,0)(0,0)﻿, затем — ﻿(X,0),(X,Y),(X,0),(X,Y),﻿ наконец, ﻿(0,Y)(0,Y)﻿. Гарантируется, что входные данные корректны, то есть план является прямоугольником, линейные размеры которого соответ- ствуют размерам переговорки, а также он не выходит за границы перегородки.
Все числа во входном файле вещественные, заданы с точностью 
﻿55﻿ знаков после десятичной точки. План выполнен в масштабе не менее ﻿0,00010,0001﻿ и строго менее ﻿11﻿.



Формат выходных данных
Выведите два вещественных числа — координаты неподвижной точки в координатах переговорки. Выводить число нужно с точностью не менее четырех знаков после запятой.


Замечание 
Заметьте, что для читаемости условий входные данные в примере даются с меньшим количеством десятичных знаков. В реальных тестовых данных в координатах будут дополнительные нули на конце.
'''

#PT. Пройденные тесты 0

import json
import os

import git

from test_contest.H import solution

git_repo = git.Repo(os.getcwd(), search_parent_directories=True)
git_root = git_repo.git.rev_parse("--show-toplevel")
file_path = os.path.join(git_root, "test_contest", "H", "expected.json")

with open(file_path) as json_file:
    expected = json.load(json_file)


def test_solution(monkeypatch):
    for test_data in expected:
        expected[test_data]["input"] = iter(expected[test_data]["input"])
        monkeypatch.setattr("builtins.input", lambda: next(expected[test_data]["input"]))
        out = solution.function()
        assert out == expected[test_data]["output"]
