'''В школе перед Новым Годом устраивают игру в Тайного Санту. Каждому ученику ﻿ii﻿ выдается ученик ﻿a_ia i​ ﻿, которому он должен подарить подарок.
Костя, как администратор игры, определил каждому школьнику свое число ﻿a_ia i​ ﻿. Но потом его коллега Маша спросила: А правда ли, что если начать цепочку подарков от школьника ﻿11﻿ к школьнику ﻿a_1a 1 ﻿, потом ﻿a_{a1}a a1​
 ﻿ и так далее, то цепочка замкнется на школьнике ﻿11﻿, после того, как задействует всех остальных учеников ровно по одному разу?
Костя не знает, правда это или нет, но он собирается изменить ровно одно число ﻿a_ia i​ ﻿, чтобы получить конфигурацию, которая устроит Машу. Помогите ему с этим.


Формат входных данных
В первой строке находится натуральное число ﻿nn﻿ — количество школьников ﻿(2 \leq n \leq 10^5)(2≤n≤10 5 )﻿. В следующей строке находится ﻿nn﻿ натуральных чисел ﻿a_ia i​ ﻿ — ученик, который достался Тайному Санте с номером ﻿i (1 \leq a_i \leq n)i(1≤a i​ ≤n)﻿.


Формат выходных данных
В первой строке выведите два числа ﻿(1 \leq x , y \leq n , x \ne y)(1≤x,y≤n,x ​ =y)﻿ — номер ученика ﻿xx﻿, которому нужно изменить число ﻿a_xa x​ ﻿, и новое значение ﻿a_xa x​ ﻿.
Должно выполняться условие ﻿a_x \ne ya x​  ​ =y﻿. Если ответов несколько — выведите любой. 
Если сделать это невозможно — выведите ﻿<< -1 -1>><<−1−1>>﻿


Замечание
В первом примере хотя бы один школьник будет дарить подарок сам себе.
Во втором примере после изменения происходят передачи подарков ﻿1 \to 2 \to3 \to 11→2→3→1﻿.
'''

#PT. Пройденные тесты 9.
from collections import Counter

n = int(input())
a = list(map(int, input().split()))

count_a = Counter(a)
if (count_a.most_common(1)[0][1] == 2) and (count_a.most_common(2)[1][1] == 1):
    empty = [i for i in range(1, len(a)+1) if i not in count_a]
    if len(empty) != 1:
        print(-1, -1)
    else: 
        n_change = a.index(count_a.most_common(1)[0][0])
        a[n_change] = empty[0]
        end = a[0]
        for _ in range(len(a)):
            end = a[end-1]
        if end == a[0]:
            print(n_change+1, empty[0])
        else: 
            print(a.index(count_a.most_common(1)[0][0])+1, empty[0])

else:
    print(-1, -1)
